from typing import Any, Text, Dict, List

from rasa_sdk import Action, Tracker
from rasa_sdk.executor import CollectingDispatcher
from rasa_sdk.events import SlotSet, FollowupAction
import json, time, requests
from websocket import create_connection

# Action to send user inputs to the WebHook
class send_request(Action):

    # WebHook URL
    server = "ws://localhost:8082"

    def name(self) -> Text:
        return "send_request"

    def run(self, dispatcher, tracker, domain):
        
        msg = tracker.latest_message

        # Create the request for the WebHook
        request = {}
        request['sender'] = 'user'
        request['intent'] = msg['intent']['name']

        entities = {}
        for entity in msg['entities']:
            e_name = entity['entity']
            entities[e_name] = entity['value']
        
        request['entities'] = entities

        # Send the request, get answer and event generated by the WebHook
        ws = create_connection(self.server)
        print('connection created...')
        ws.send(json.dumps(request))
        print('sending...')
        (answer, bot_event) = eval(ws.recv())
        print('getting the result: ', answer)
        ws.close()
        # Answer displayed and bot_event set to the one returned by the WebHook
        dispatcher.utter_message(text=answer)
        return [SlotSet('bot_event', bot_event)]

# Action that prints on the chat the sunshine message
class send_sun_shines(Action):

    # URL of the chat
    server = 'http://localhost:8888'

    def name(self) -> Text:
        return 'send_sun_shines'

    # Send the message on the chat and set the bot_event
    def run(self, dispatcher, tracker, domain):
        print('[SUN] Running POST request')
        answer = requests.post(self.server, json={'sender': 'bot', 'msg': 'The sun is bright today!'})
        print('[SUN] Done')
        return [SlotSet('bot_event', 'help_called')]
